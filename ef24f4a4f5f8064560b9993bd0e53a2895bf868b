{
  "comments": [
    {
      "key": {
        "uuid": "4fb7e313_f8a57cd2",
        "filename": "src/interactors/RegisterDevice.js",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2018-12-13T22:53:38Z",
      "side": 1,
      "message": "Whitelist (whitelist is a word)",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 23
      },
      "revId": "ef24f4a4f5f8064560b9993bd0e53a2895bf868b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a160267e_fcb3f813",
        "filename": "src/interactors/RegisterDevice.js",
        "patchSetId": 10
      },
      "lineNbr": 31,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2018-12-13T22:53:38Z",
      "side": 1,
      "message": "This isn\u0027t being awaited. If something fails, will trigger an uncaught exception. Use map and await all the promises:\n\nconst updatePromises \u003d device.map(...);\nawait Promise.all(updatePromises);",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 31,
        "endChar": 25
      },
      "revId": "ef24f4a4f5f8064560b9993bd0e53a2895bf868b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e79e4c0_e2c7e9aa",
        "filename": "src/interactors/RegisterDevice.js",
        "patchSetId": 10
      },
      "lineNbr": 37,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2018-12-13T22:53:38Z",
      "side": 1,
      "message": "appendTo",
      "range": {
        "startLine": 37,
        "startChar": 8,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "ef24f4a4f5f8064560b9993bd0e53a2895bf868b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}